#BlueJ class context
comment0.params=oben\ unten
comment0.target=Bruch(int,\ int)
comment1.params=potenzzahl
comment1.target=Bruch\ potenz(int)
comment10.params=
comment10.target=void\ erstelleNormalform()
comment11.params=
comment11.target=void\ kuerze()
comment12.params=
comment12.target=void\ macheNennerPositiv()
comment13.params=trueFalse
comment13.target=Bruch\ macheNennerPositiv(boolean)
comment14.params=zahl
comment14.target=int\ ggT(int)
comment14.text=\r\n\ Diese\ Methode\ ermittelt\ mit\ Hilfe\ des\ euklidischen\ Algorithmus\ den\ ggT\ von\ \u00FCbergebener\ Zahl\ und\ dem\ Nenner\ des\ aktuellen\ Bruches.\r\n\ Wer\ Lust\ hat,\ kann\ (und\ soll)\ sich\ \u00FCberlegen,\ warum\ dieser\ Algorithmus\ funktioniert\!\!\!\r\n
comment15.params=
comment15.target=Bruch\ bildeKehrwert()
comment16.params=vorgabeOben
comment16.target=void\ setzeZaehler(int)
comment17.params=vorgabeUnten
comment17.target=void\ setzeNenner(int)
comment18.params=
comment18.target=int\ gibZaehler()
comment19.params=
comment19.target=int\ gibNenner()
comment2.params=summand
comment2.target=Bruch\ addiere(Bruch)
comment20.params=
comment20.target=double\ gibBruchAlsDezimalzahl()
comment21.params=
comment21.target=Bruch\ copyPaste()
comment22.params=doYouRealyWantThis
comment22.target=void\ crash(boolean)
comment3.params=subtrahend
comment3.target=Bruch\ subtrahiere(Bruch)
comment4.params=minuend
comment4.target=Bruch\ subtrahiereVon(Bruch)
comment5.params=faktor
comment5.target=Bruch\ multipliziereMit(Bruch)
comment6.params=divisor
comment6.target=Bruch\ dividiereDurch(Bruch)
comment7.params=dividend
comment7.target=Bruch\ dividiere(Bruch)
comment8.params=weitererNenner
comment8.target=int\ gibHauptnennerMit(int)
comment9.params=nennervorgabe
comment9.target=int\ erweitereAufNenner(int)
numComments=23
